// Copyright 2020, Verizon Media
// Licensed under the terms of the MIT. See LICENSE file in project root for terms.

// Types in this file are generated by backend/dtos/gentypes
// Changes made will be overridden on next generate

export type APIKey = {
  accessKey: string,
  secretKey: string /* base64 encoded */,
  lastAuth: string | undefined,
}

export type Evidence = {
  uuid: string,
  description: string,
  occurredAt: string,
  operator: User,
  tags: Array<Tag>,
  contentType: string,
}

export type Finding = {
  uuid: string,
  title: string,
  description: string,
  readyToReport: boolean,
  ticketLink: string | undefined,
  tags: Array<Tag>,
  numEvidence: number,
  category: string,
  occurredFrom: string | undefined,
  occurredTo: string | undefined,
}

export type Operation = {
  slug: string,
  name: string,
  numUsers: number,
  status: number,
  id: number,
}

export type OperationWithExportData = {
  slug: string,
  name: string,
  numUsers: number,
  status: number,
  exportStatus: number | undefined,
  lastCompletedExport: string | undefined,
  id: number,
}

export type Query = {
  id: number,
  name: string,
  query: string,
  type: string,
}

export type Tag = {
  id: number,
  colorName: string,
  name: string,
}

export type User = {
  firstName: string,
  lastName: string,
  slug: string,
}

export type UserOwnView = User & {
  email: string,
  admin: boolean,
  authSchemes: Array<AuthenticationInfo>,
  headless: boolean,
}

export type AuthenticationInfo = {
  userKey: string,
  schemeName: string | undefined,
  schemeCode: string,
  lastLogin: string | undefined,
}

export type UserAdminView = User & {
  email: string,
  admin: boolean,
  headless: boolean,
  disabled: boolean,
  deleted: boolean,
  authSchemes: Array<string>,
}

export type UserOperationRole = {
  user: User,
  role: string,
}

export type DetailedAuthenticationInfo = {
  schemeName: string,
  schemeCode: string,
  userCount: number,
  uniqueUserCount: number,
  lastUsed: string | undefined,
  labels: Array<string>,
}

export type SupportedAuthScheme = {
  schemeName: string,
  schemeCode: string,
}
